unit Dm_Database;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs, FireDAC.FMXUI.Wait, FireDAC.Phys.SQLiteWrapper.Stat, FireDAC.Comp.UI,
  Data.DB, FireDAC.Comp.Client;

type
  TDataModule1 = class(TDataModule)
    FdConnSQLite: TFDConnection;
    FdWaitCursor: TFDGUIxWaitCursor;
    FDPhysSQLiteDriverLink: TFDPhysSQLiteDriverLink;
    procedure FdConnSQLiteAfterConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}

procedure TDataModule1.FdConnSQLiteAfterConnect(Sender: TObject);
begin
  if not DirectoryExists(GetCurrentDir + '\BD' ) then
      ForceDirectories(GetCurrentDir + '\BD');

  FDConnSQLite.Params.Values['Database'] := GetCurrentDir + '\BD\Database.db';
end;

end.
