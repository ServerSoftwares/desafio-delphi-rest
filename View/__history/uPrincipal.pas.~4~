unit uPrincipal;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Edit, FMX.Layouts, FMX.TabControl,
  uConsultaCEP;

type
  TfrmPrincipal = class(TForm)
    rctFooter: TRectangle;
    rctTop: TRectangle;
    lblGsSmart: TLabel;
    tbcPrincipal: TTabControl;
    tbiConsulta: TTabItem;
    tbiConfig: TTabItem;
    tbiEditDados: TTabItem;
    lytRetorno: TLayout;
    stylbk1: TStyleBook;
    lytconsulta: TLayout;
    lytBusca: TLayout;
    recBusca: TRectangle;
    rectBusca: TRectangle;
    lblBusca: TLabel;
    edtCEP: TEdit;
    lblCEP: TLabel;
    lblEstado: TLabel;
    lblCidade: TLabel;
    lblBairro: TLabel;
    lblRua: TLabel;
    lblServico: TLabel;
    procedure rectBuscaClick(Sender: TObject);
    procedure ThreadTerminate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation

{$R *.fmx}

procedure TfrmPrincipal.rectBuscaClick(Sender: TObject);
var
  RetornoCEP: TRetornoCEP;
  t: TThread;
begin
  t:= TThread.CreateAnonymousThread(procedure
  begin
    RetornoCEP := TConsultaCEP.Consultar(edtCep.Text);
    if TRetornoCEP.Retorno then

  end);
  t.FreeOnTerminate := true;
  t.OnTerminate := ThreadTerminate;
  t.Start;
end;

procedure TfrmPrincipal.ThreadTerminate(Sender: TObject);
var
  erro : string;
begin
  if Assigned(TThread(Sender).FatalException) then
  begin
    ShowMessage('Erro na consulta' + Exception(TThread(Sender).FatalException).Message);
    exit;
  end;
  ShowMessage('Sincronização concluída');
end;
end.
