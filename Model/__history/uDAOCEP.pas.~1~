unit uDAOCEP;

interface

uses
  System.SysUtils, System.Classes, Data.DB, Data.Win.ADODB, Model.RetornoCEP;

type
  TCEPCustomDAO = class
  private
    FConnection: TADOConnection;
  public
    constructor Create(const AConnectionString: string);
    function Consultar(const CEP: string): TRetornoCEP;
  end;

implementation

constructor TCEPCustomDAO.Create(const AConnectionString: string);
begin
  inherited Create;
  FConnection := TADOConnection.Create(nil);
  FConnection.ConnectionString := AConnectionString;
end;

function TCEPCustomDAO.Consultar(const CEP: string): TRetornoCEP;
var
  Qry: TADOQuery;
begin
  Qry := TADOQuery.Create(nil);
  try
    Qry.Connection := FConnection;
    Qry.SQL.Text := 'SELECT CEP, Logradouro, Bairro, Cidade, Estado FROM TabelaCEP WHERE CEP = :CEP';
    Qry.Parameters.ParamByName('CEP').Value := CEP;
    Qry.Open;
    if Qry.IsEmpty then
      Result := nil
    else
    begin
      Result := TRetornoCEP.Create;
      Result.Consulta := 'OK';
      Result.CEP := Qry.FieldByName('CEP').AsString;
      Result.Logradouro := Qry.FieldByName('Logradouro').AsString;
      Result.Bairro := Qry.FieldByName('Bairro').AsString;
      Result.Cidade := Qry.FieldByName('Cidade').AsString;
      Result.Estado := Qry.FieldByName('Estado').AsString;
      Result.Service := 'Banco de Dados';
    end;
  finally
    Qry.Free;
  end;
end;

end.

